:root {
  --EditorRowHighlightedBackground: rgba(228, 245, 39, 0.6);
}

/* TODO this should not be global */
.Editor {
  width: 100%;
  height: 100%;
  background: var(--MainBackground);
  color: white;
  outline: none;
  border: none;
  font-family: var(--EditorFontFamily);
  position: relative;
  white-space: pre;
  font-size: var(--EditorFontSize);
  letter-spacing: var(--EditorLetterSpacing);
  font-feature-settings: var(--EditorFontFeatureSettings);
  tab-size: var(--EditorTabSize);
  font-display: block;
  cursor: text;
  font-weight: var(--EditorFontWeight);
  position: absolute;
  display: flex;
}

.EditorContent {
  contain: strict;
  width: 100%;
  height: 100%;
}

.EditorLayers {
  contain: strict;
  width: 100%;
  height: 100%;
}

.EditorRows {
  white-space: pre;
  width: 100%;
  height: 100%;
  contain: strict;
}

.EditorRow {
  display: block;
  height: var(--EditorLineHeight);
  line-height: var(--EditorLineHeight);
  contain: strict;
}

.EditorRowHighlighted {
  background: var(--EditorRowHighlightedBackground);
}

.Editors {
  flex: 1;
}

.EditorCursor {
  width: 2px;
  height: var(--EditorLineHeight);
  position: absolute;
  top: 0;
  left: 0;
  background: var(--EditorCursorBackground, red);
  pointer-events: none;
  contain: strict;
}

.ScrollBarDiagnostics {
  top: 0;
  right: 0;
  bottom: 0;
  position: absolute;
  width: 14px;
}

.ScrollBarDiagnostic {
  height: 5px;
  background: red;
  width: 100%;
  position: absolute;
}

.EditorInput {
  position: absolute;
  width: 0;
  height: 0;
  top: 0;
  left: 0;
  opacity: 0;
  padding: 0;
  border: 0;
  font-size: 1px; /* needs to be at least one pixel because otherwise chrome will not emit input events */
  top: -9999px;
  left: -9999px;
  /* contain: strict; */
  /* visibility: hidden; */
}

/* interesting: could do transform via css -> only set data-row, data-column on editor cursor */
/* .EditorCursor::after {
  position: absolute;
  content: attr(data-row-index);
} */

/* great css solution -> only nesting is bad -> can be avoided?
.Editor:not(:focus-within) .EditorCursor {
  display: none;
} */

.EditorSelection {
  position: absolute;
  top: 0;
  left: 0;
  pointer-events: none;
  background: var(--EditorSelectionBackground);
}

.Token {
  contain: content;
}

.LayerCursor,
.LayerDiagnostics {
  position: absolute;
  inset: 0;
  pointer-events: none;
}

.Diagnostic {
  position: absolute;
  contain: strict;
}

.DiagnosticError {
  background: url(/icons/squiggly-error.svg) repeat-x bottom left;
}

.DiagnosticWarning {
  background: url(/icons/squiggly-warning.svg) repeat-x bottom left;
}

.Token.EditorGoToDefinitionLink {
  color: #4e94ce !important;
  text-decoration: underline;
  cursor: pointer;
}

.EditorOverlayMessage {
  padding: 1px 4px;
  background-color: #063b49;
  border: 1px solid #007acc;
  color: white;
  pointer-events: all;
  user-select: text;
}

.Link {
  text-decoration: underline;
}

.Gutter {
  contain: strict;
  width: 30px;
  height: 100%;
  display: flex;
  flex-direction: column;
}

.Gutter:empty {
  display: none;
}

.LineNumber {
  color: var(--EditorLineNumberForeground, rgba(155, 162, 160, 0.3));
  contain: strict;
  margin-right: 1px;
  height: var(--EditorLineHeight);
  text-align: right;
}
