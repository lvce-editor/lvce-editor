import * as RendererProcess from '../RendererProcess/RendererProcess.js'
import * as WrapEditorCommands from '../WrapEditorCommands/WrapEditorCommands.js'

const ids = [
  'addCursorAbove',
  'addCursorBelow',
  'applyEdit',
  'braceCompletion',
  'cancelSelection',
  'closeCodeGenerator',
  'closeCompletion',
  'closeCompletion',
  'closeFind',
  'closeRename',
  'closeRename',
  'closeSourceAction',
  'closeSourceActions',
  'ColorPicker.handleSliderPointerDown',
  'ColorPicker.handleSliderPointerMove',
  'compositionEnd',
  'compositionStart',
  'compositionUpdate',
  'contextMenu',
  'copy',
  'copyLineDown',
  'copyLineUp',
  'cursorCharacterLeft',
  'cursorCharacterRight',
  'cursorDown',
  'cursorEnd',
  'cursorHome',
  'cursorLeft',
  'cursorRight',
  'cursorSet',
  'cursorUp',
  'cursorWordLeft',
  'cursorWordPartLeft',
  'cursorWordPartRight',
  'cursorWordRight',
  'cut',
  'deleteAllLeft',
  'deleteAllRight',
  'deleteCharacterLeft',
  'deleteCharacterRight',
  'deleteHorizontalRight',
  'deleteLeft',
  'deleteRight',
  'deleteWordLeft',
  'deleteWordPartLeft',
  'deleteWordPartRight',
  'deleteWordRight',
  'EditorCodeGenerator.accept',
  'EditorCompletion.closeDetails',
  'EditorCompletion.dispose',
  'EditorCompletion.focusFirst',
  'EditorCompletion.focusIndex',
  'EditorCompletion.focusLast',
  'EditorCompletion.focusNext',
  'EditorCompletion.focusNextPage',
  'EditorCompletion.focusPrevious',
  'EditorCompletion.focusPreviousPage',
  'EditorCompletion.handleClickAt',
  'EditorCompletion.handleScrollBarCaptureLost',
  'EditorCompletion.handleScrollBarClick',
  'EditorCompletion.handleScrollBarMove',
  'EditorCompletion.handleScrollBarThumbPointerMove',
  'EditorCompletion.handleWheel',
  'EditorCompletion.openDetails',
  'EditorCompletion.scrollDown',
  'EditorCompletion.selectCurrent',
  'EditorCompletion.selectIndex',
  'EditorCompletion.toggleDetails',
  'EditorRename.accept',
  'EditorRename.handleBlur',
  'EditorSourceActions.close',
  'EditorSourceActions.focusFirst',
  'EditorSourceActions.focusLast',
  'EditorSourceActions.focusNext',
  'EditorSourceActions.focusPrevious',
  'EditorSourceActions.selectCurrent',
  'findAllReferences',
  'FindWidget.close',
  'FindWidget.focusCloseButton',
  'FindWidget.focusFind',
  'FindWidget.focusNext',
  'FindWidget.focusNextMatchButton',
  'FindWidget.focusPrevious',
  'FindWidget.focusPreviousMatchButton',
  'FindWidget.focusReplace',
  'FindWidget.focusReplaceAllButton',
  'FindWidget.focusReplaceButton',
  'FindWidget.focusToggleReplace',
  'FindWidget.handleBlur',
  'FindWidget.handleFocus',
  'FindWidget.handleFocusClose',
  'FindWidget.handleFocusNext',
  'FindWidget.handleFocusPrevious',
  'FindWidget.handleFocusReplaceAll',
  'FindWidget.handleInput',
  'FindWidget.handleReplaceFocus',
  'FindWidget.handleReplaceInput',
  'FindWidget.handleToggleReplaceFocus',
  'FindWidget.replaceAll',
  'FindWidget.replaceAll',
  'FindWidget.toggleMatchCase',
  'FindWidget.toggleMatchWholeWord',
  'FindWidget.toggleReplace',
  'FindWidget.toggleUseRegularExpression',
  'format',
  'getText',
  'getWordAt',
  'getWordBefore',
  'goToDefinition',
  'goToTypeDefinition',
  'handleBeforeInput',
  'handleBeforeInputFromContentEditable',
  'handleBlur',
  'handleContextMenu',
  'handleDoubleClick',
  'handleFocus',
  'handleMouseDown',
  'handleMouseMove',
  'handleMouseMoveWithAltKey',
  'handleNativeSelectionChange',
  'handlePointerCaptureLost',
  'handleScrollBarClick',
  'handleScrollBarHorizontalMove',
  'handleScrollBarHorizontalPointerDown',
  'handleScrollBarMove',
  'handleScrollBarPointerDown',
  'handleScrollBarVerticalMove',
  'handleScrollBarVerticalPointerDown',
  'handleSingleClick',
  'handleTab',
  'handleTouchEnd',
  'handleTouchMove',
  'handleTouchStart',
  'handleTripleClick',
  'indentLess',
  'indentMore',
  'insertLineBreak',
  'moveLineDown',
  'moveLineUp',
  'moveRectangleSelection',
  'moveRectangleSelectionPx',
  'moveSelection',
  'moveSelectionPx',
  'openCodeGenerator',
  'openColorPicker',
  'openCompletion',
  'openFind',
  'openFind2',
  'openRename',
  'organizeImports',
  'paste',
  'pasteText',
  'replaceRange',
  'rerender',
  'save',
  'save',
  'selectAll',
  'selectAllLeft',
  'selectAllOccurrences',
  'selectAllRight',
  'selectCharacterLeft',
  'selectCharacterRight',
  'selectDown',
  'selectInsideString',
  'selectionGrow',
  'selectLine',
  'selectNextOccurrence',
  'selectUp',
  'selectWord',
  'selectWordLeft',
  'selectWordRight',
  'setDecorations',
  'setDelta',
  'setDeltaY',
  'setLanguageId',
  'setSelections',
  'showHover',
  'showHover2',
  'showSourceActions',
  'showSourceActions2',
  'sortImports',
  'sortLinesAscending',
  'tabCompletion',
  'toggleBlockComment',
  'toggleComment',
  'toggleLineComment',
  'type',
  'undo',
  'unIndent',
]

export const Commands = {
  // TODO command to set cursor position
  ...WrapEditorCommands.wrapEditorCommands(ids),

  // TODO
  async showOverlayMessage(state, editor, ...args) {
    await RendererProcess.invoke(...args)
    return state
  },
}

export const CommandsWithSideEffectsLazy = {
  typeWithAutoClosing: () => {
    return {
      typeWithAutoClosing: WrapEditorCommands.wrapEditorCommand('typeWithAutoClosing'),
    }
  },
}
