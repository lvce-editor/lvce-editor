# Based on https://github.com/BurntSushi/ripgrep/blob/master/.github/workflows/release.yml by BurntSushi (License MIT)

name: release
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
jobs:
  create-release:
    name: create-release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.release.outputs.upload_url }}
      rg_version: ${{ env.RG_VERSION }}
    steps:
      - name: Get the release version from the tag
        shell: bash
        if: env.RG_VERSION == ''
        run: |
          echo "RG_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "version is: ${{ env.RG_VERSION }}"
      - name: Create GitHub release
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RG_VERSION }}
          release_name: ${{ env.RG_VERSION }}

  build-release:
    name: build-release
    needs: ['create-release']
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18.4.0'
          registry-url: 'https://registry.npmjs.org'
      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: npm ci
        run: npm ci
        if: steps.npm-cache.outputs.cache-hit != 'true'
      - run: npm test
      - run: node build/bin/build.js --target=server
      - run: npm publish --access public
        working-directory: ./build/.tmp/server/extension-host
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      - run: npm publish --access public
        working-directory: ./build/.tmp/server/pty-host
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      - run: npm publish --access public
        working-directory: ./build/.tmp/server/server
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      - run: npm publish --access public
        working-directory: ./build/.tmp/server/shared-process
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

      # - name: Build archive
      #   shell: bash
      #   run: |
      #     staging="language-features-typescript-${{ needs.create-release.outputs.rg_version }}"
      #     mv "extension.tar.br" "$staging.tar.br"
      #     echo "ASSET=$staging.tar.br" >> $GITHUB_ENV

      # - name: Upload release archive
      #   uses: actions/upload-release-asset@v1.0.1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ needs.create-release.outputs.upload_url }}
      #     asset_path: ${{ env.ASSET }}
      #     asset_name: ${{ env.ASSET }}
      #     asset_content_type: application/octet-stream
